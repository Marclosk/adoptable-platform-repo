version: "3.8"

services:
  db:
    image: postgres:15
    container_name: adoptable_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: adoptable_db
      POSTGRES_USER: marc
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    secrets:
      - postgres_password

  minio:
    image: quay.io/minio/minio:RELEASE.2025-02-18T16-25-55Z
    container_name: adoptable_minio
    command: server /data --console-address ":9001"
    expose:
      - "9000"
      - "9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test:
        [
          "CMD",
          "mc",
          "alias",
          "set",
          "local",
          "http://127.0.0.1:9000",
          "minioadmin",
          "minioadmin",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: adoptable_backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings
      - DJANGO_SETTINGS_ENV=Production
      - USE_MINIO=TRUE
      - AWS_STORAGE_BUCKET_NAME=public
      - AWS_S3_ADDRESSING_STYLE=path
      - AWS_S3_CUSTOM_DOMAIN=localhost:9000/public
    secrets:
      - django_secret_key
      - postgres_password
      - email_host_password
      - aws_secret_key
    depends_on:
      - db
      - minio
    networks:
      - app_network

  frontend:
    build:
      context: ./adoptable_front
      dockerfile: Dockerfile
    container_name: adoptable_frontend
    command: npm run dev
    volumes:
      - ./adoptable_front:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    env_file:
      - ./adoptable_front/.env
    depends_on:
      - backend
    networks:
      - app_network

networks:
  app_network:

volumes:
  postgres_data:
  minio_data:

secrets:
  postgres_password:
    file: ./backend/secrets/postgres_password.txt
  django_secret_key:
    file: ./backend/secrets/django_secret_key.txt
  email_host_password:
    file: ./backend/secrets/email_host_password.txt
  aws_secret_key:
    file: ./backend/secrets/aws_secret_key.txt
