name: CI

on:
  push:
    branches: [main, frontend-login-create]
  pull_request:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U test_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies with Poetry
        run: |
          cd backend
          poetry install

      - name: Set environment variables
        run: |
          echo "DJANGO_SETTINGS_MODULE=app.settings" >> $GITHUB_ENV
          echo "DATABASE_URL=postgres://marc:admin@localhost:5432/adoptable_db" >> $GITHUB_ENV

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h 127.0.0.1 -U test_user; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Run migrations
        run: |
          cd backend
          poetry run python manage.py migrate

      - name: Run backend tests
        run: |
          cd backend
          poetry run pytest --ds=app.settings --disable-warnings


  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test
